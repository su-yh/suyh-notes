<?xml version="1.0" encoding="UTF-8"?>
<beans default-lazy-init="true"
	xmlns="http://www.springframework.org/schema/beans" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="  
       http://www.springframework.org/schema/beans   
       http://www.springframework.org/schema/beans/spring-beans-4.3.xsd  
       http://www.springframework.org/schema/mvc   
       http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd   
       http://www.springframework.org/schema/tx   
       http://www.springframework.org/schema/tx/spring-tx-4.3.xsd   
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
       http://www.springframework.org/schema/util 
       http://www.springframework.org/schema/util/spring-util-4.3.xsd
       http://www.springframework.org/schema/data/jpa 
       http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- 自动扫描该包 -->
	<context:component-scan base-package="com.jt" />
	<!--启用MVC注解 -->
	<mvc:annotation-driven />

	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/WEB-INF/pages/" />
		<property name="suffix" value=".html"></property>
	</bean>
	<!-- 配置DRUID连接池 -->
	<util:properties id="cfg" location="classpath:config.properties" />
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close" init-method="init" lazy-init="true">
		<property name="driverClassName" value="#{cfg.driver}" />
		<property name="url" value="#{cfg.url}" />
		<property name="username" value="#{cfg.username}" />
		<property name="password" value="#{cfg.password}" />
	</bean>
	<!-- 整合mybatis配置sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-configs.xml" />
	</bean>
	<!-- 配置mybatis接口映射对象的扫描 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.jt.**.dao " />
	</bean>





	<!-- shiro 工厂bean 配置 -->

	<!-- 自定义Realm -->
	<bean id="userRealm" class="com.jt.sys.service.realm.ShiroUserRealm">
		<!-- 凭证算法匹配器 -->
		<property name="credentialsMatcher">
			<bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
				<property name="hashAlgorithmName" value="MD5"></property>
			</bean>
		</property>
	</bean>

	<!-- 配置shiro 安全管理器, 是shiro 框架的核心安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="userRealm"></property>
	</bean>

	<!-- 这个id 值提供给web.xml 中配置的过滤器的参数值使用 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/loginUI.do"></property>
		<!-- <property name="unauthorizedUrl" value="/default.html"></property> -->
		<property name="filterChainDefinitions">
			<value>
				<!-- 允许匿名访问的资源，这个必须要写在前面 -->
				/bower_components/** = anon
				/build/** = anon
				/dist/** = anon
				/plugins/** = anon

				<!-- 可以匿名访问的路径, 例如：验证码、登录连接、退出连接 -->
				/loginUI.do = anon
				/doLogin.do = anon
				/indexUI.do = anon
				<!-- 这个logout.do 我们都不需要实现，对于这个项目而言 -->
				/logout.do = logout	<!-- '='后面的logout 必须是这个字符串，不能是别的 -->

				/** = authc	<!-- 剩余其他的路径都必须通过才可以访问，这个要写在最后。 -->
			</value>
		</property>
	</bean>



	<!-- Shiro 生命周期处理器，Shiro 框架会负责管理Shiro 各种组件对象的生命周期 -->
	<bean id="lifecycleBeanPostProcessor" 
		class="org.apache.shiro.spring.LifecycleBeanPostProcessor"></bean>

	<!-- 启用shiro 注解权限检查 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor"></bean>

	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager"></property>
	</bean>
	
	
	<!-- ****** Spring 声明式事务处理 ****** -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="dataSource"/>
	</bean>
	<!--设置注解驱动的事务管理  -->
	<tx:annotation-driven transaction-manager="txManager"/>

</beans>





