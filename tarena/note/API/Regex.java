正则表达式
字符集
	[] 中括号表示只有一位
	[a-z&&[^bc]] a~z 中除了 b 和 c 以外的任意一个字符

预定义字符集
	正则表达式		说明
	.				任意一个字符							[.]
	\d 				任意一个数字字符，相当于[0-9]			[\\d]
	\w				单词字符，相当于[ a-zA-Z0-9_ ]			[\\w]
	\s 				空白字符，相当于[ \t\n\r ]				[\\s]
	\D				非数字字符                              [\\D]
	\W 				非单词字符                              [\\W]
	\S 				非空白字符                              [\\S]

数量词
	正则表达式		说明
	X?				表示0个或者1个X
	X*				表示0个或者任意多个X
	X+				表示1个到任意多个X
	X{n}			表示n 个X
	X{n,}			表示X最少n 个
	X{n,m}			表示X最少n 个，最多m 个

分组
	() 圆括号表示分组，可以将一系列正则表达式看做一个整体
	练习：
		检索手机号码：+86 13838389438
		- +86 可有可无
		- +86 与后面的号码之间空格可以没有或者有多个
		- 电话号码为11 位数字


边界匹配器 
	^ 行的开头 
	$ 行的结尾 
	\b 单词边界 
	\B 非单词边界 
	\A 输入的开头 
	\G 上一个匹配的结尾 
	\Z 输入的结尾，仅用于最后的结束符（如果有的话） 
	\z 输入的结尾 
	
	案例：匹配8-10个\w 两种写法的区别
		String regex1 = "^\\w{8,10}$"
		String regex2 = "\\w{8,10}";
		hello_world 与第一个不匹配，因为它从开头到结尾一共有11 个字符了
		hello_world 与第二个匹配
		
	string 类中的matches(regex): 自带开头和结尾匹配,即：将regex 字符串传入时，matches 就好像在这个字符串上添加了"^" 和"$" 一样的效果


练习: 
	1.手机号码验证(1 3,4,5,7,8 *)
		1[34578]\d{9}
		String regex1 = "1[34578]\\d{9}"
		String regex2 = "1[34578][0-9]{9}"

		String regex1 = "1[34578]\\d{9}";
		String phone = "14567898765";
		boolean b1 = phone.matches(regex1);
		System.out.println(b1);

	2. 校验QQ邮箱(8-11位数字@qq.com)
		[1-9]\d{7,10}@qq\.com
		
	3. 检验输入的是否为日期格式: 2015-12-12
		\d{4}-((1-|3-|5-|7-|8-|10-|12-))


class Pattern
属于包 java.util.regex

问题：
	正则表达式中中文如何表示？
		Unicode 编码来表示中文
		[\u4e00-\u9af5]	中文的范围
		
	案例：
		用户输入姓名(中文)，姓名长度为2-4位
		String regex = "[\u4e00-\u9af5]{2,4}";















































