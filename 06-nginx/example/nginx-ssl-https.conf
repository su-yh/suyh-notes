# 使用哪个用户启动nginx
#user  nobody;

# 启动nginx 的时候要启动的worker 进程数量
worker_processes  1;

# 事件驱动模块
events {
    # 每一个worker 进程可以有多少个连接
    worker_connections  1024;
}

http {
    # 将外部的配置文件引入到当前配置文件中
    include       mime.types;
    # 当没有找到匹配的mime 的类型时，使用默认的处理类型
    default_type  application/octet-stream;

    # 数据零拷贝，让数据直接传输，而不需要走nginx 进程。
    # nginx 会给操作系统发送一个信号，告诉操作系统，这些数据不需要经过我，你直接通过网络传输即可。
    sendfile        on;

    keepalive_timeout  65;

    # 这个最终试验没有成功呀，也不知道是哪里的问题。2023-10-15
    server {
        listen       443 ssl;
        # 配置https 的默认访问端口443
        # 如果未在此处配置https 的默认访问端口，可能会造成nginx 无法启动
        server_name www.suyh.com.cn suyh.com.cn;

        root html;
        index index.html index.htm;

        # ssl证书地址
        ssl_certificate     /usr/local/nginx/cert/suyh.com.cn.pem;  # pem文件的路径
        ssl_certificate_key  /usr/local/nginx/cert/suyh.com.cn.key; # key文件的路径

        # ssl验证相关配置
        ssl_session_timeout  5m;    #缓存有效期
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;    #加密算法
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;    #安全链接可选的加密协议
        ssl_prefer_server_ciphers on;   #使用服务器端的首选算法

        location / {
            root   html;
            index  index.html index.htm;
        }
    }
}

