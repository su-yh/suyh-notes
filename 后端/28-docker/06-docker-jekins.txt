# 手册链接地址: https://www.jenkins.io/zh/doc/book/installing/

# github token 生成地址：https://github.com/settings/tokens/new
# URL  
#		https://github.com/su787910081/java-demo-springboot.git
# github 的token: springboot-jekins-token
#   f861734f3aa5c84b65a8bb8a4e77b478ecdbcd31

# maven 相关的博客: https://www.reinforce.cn/t/658.html
#   我们在宿主机中安装maven 然后挂载到docker 中，然后在docker 容器中使用。


如果这个指定的主机目录已经存在请先清空，以免之前的一些残留数据影响安装与启动
	rm -rf /var/jenkins-data 
	rm -rf /var/run/docker.sock
	
在启动之前先安装好jdk 和maven

# 拉取docker 镜像
docker pull  jenkinsci/blueocean

创建并启动镜像容器完整命令
docker run \
  --name jenkins-suyh \
  -u root \
  -d \
  -p 49000:8080 \
  -p 50000:50000 \
  -v /var/jenkins-data:/var/jenkins_home \
  -v /var/run/docker.sock:/var/run/docker.sock \
  -v /opt/software/apache-maven-3.6.3:/usr/local/maven \
  -v /var/maven-repository:/var/maven-repository \
  -v /opt/software/jdk1.8.0_65:/opt/software/jdk1.8.0_65 \
  jenkinsci/blueocean

进入到jenkins 的界面。这里已经映射到了49000
	http://docker:49000

# 镜像容器存在时，则可以以下命令进行启动
docker stop  <镜像ID或者名称>
docker start <镜像ID或者名称>

命令说明：
docker run \
  --name jenkins-suyh \
  -u root \
  
	  # (可选)关闭时自动删除Docker容器（下图为实例）。
	  # 如果您需要退出Jenkins，这可以保持整洁。
  --rm \  
  
	# 在后台运行容器（即“分离”模式）并输出容器ID。
	# 如果您不指定此选项， 则在终端窗口中输出正在运行的此容器的Docker日志。
  -d \ 
  
	# 映射（例如“发布”）jenkinsci/blueocean 容器的端口8080到主机上的端口8080。
	# 第一个数字代表主机上的端口，而最后一个代表容器的端口。
	# 因此，如果您为此选项指定 -p 49000:8080 ，
	# 您将通过端口49000访问主机上的Jenkins。
  -p 49000:8080 \ 
  
	# （可选）将 jenkinsci/blueocean 容器的端口50000 映射到主机上的端口50000。
	# 如果您在其他机器上设置了一个或多个基于JNLP的Jenkins代理程序，
	# 而这些代理程序又与 jenkinsci/blueocean 容器交互（
	# 充当“主”Jenkins服务器，或者简称为“Jenkins主”）， 则这是必需的。
	# 默认情况下，基于JNLP的Jenkins代理通过TCP端口50000与Jenkins主站进行通信。
	# 您可以通过“ 配置全局安全性” 页面更改Jenkins主服务器上的端口号。
	# 如果您要将您的Jenkins主机的JNLP代理端口的TCP端口 值更改为51000（例如），
	# 那么您需要重新运行Jenkins（通过此 docker run …​命令）
	# 并指定此“发布”选项 -p 52000:51000，其中最后一个值与Jenkins master上的
	# 这个更改值相匹配，第一个值是Jenkins主机的主机上的端口号， 
	# 通过它，基于JNLP的Jenkins代理与Jenkins主机进行通信 - 例如52000。
  -p 50000:50000 \ 
  
	# （可选，但强烈建议）映射在容器中的`/var/jenkins_home` 目录到具有名字 jenkins-data 的volume。
	# 如果这个卷不存在，那么这个 docker run 命令会自动为你创建卷。 
	# 如果您希望每次重新启动Jenkins（通过此 docker run ... 命令）时保持Jenkins状态，则此选项是必需的 。 
	# 如果你没有指定这个选项，那么在每次重新启动后，Jenkins将有效地重置为新的实例。
	# 	注意: 所述的 jenkins-data 卷也可以 docker volume create 
	# 命令创建： docker volume create jenkins-data 代替映射 /var/jenkins_home 目录转换为Docker卷，
	# 还 可以将此目录映射到计算机本地文件系统上的目录。 
	# 例如，指定该选项 -v $HOME/jenkins:/var/jenkins_home 会将容器的 /var/jenkins_home 目录映射 
	# 到 本地计算机上目录中的 jenkins 子目录， 该$HOME目录通常是 /Users/<your-username>/jenkins 
	# 或`/home/<your-username>/jenkins` 。
  -v /var/jenkins-data:/var/jenkins_home \ 
  
	# （可选 /var/run/docker.sock 表示Docker守护程序通过其监听的基于Unix的套接字。 
	# 该映射允许 jenkinsci/blueocean 容器与Docker守护进程通信， 
	# 如果 jenkinsci/blueocean 容器需要实例化其他Docker容器，则该守护进程是必需的。 
	# 如果运行声明式管道，其语法包含agent部分用 docker
	# 
    # 例如， agent { docker { ... } } 此选项是必需的。 
	# 在Pipeline Syntax 页面上阅读更多关于这个的信息 。
	# 
	# jenkinsci/blueocean Docker镜像本身。
	# 如果此镜像尚未下载，则此 docker run 命令 将自动为您下载镜像。
	# 此外，如果自上次运行此命令后发布了此镜像的任何更新， 
	# 则再次运行此命令将自动为您下载这些已发布的镜像更新。 
	# 注意：这个Docker镜像也可以使用以下 docker pull命令独立下载（或更新） ： 
	#	docker pull jenkinsci/blueocean 注意: 如果复制并粘贴上面的命令片段不起作用，
	# 请尝试在此处复制并粘贴此无注释版本： 
  -v /var/run/docker.sock:/var/run/docker.sock \ 
  
    # 将宿主机的maven 映射到容器中使用
  -v /opt/software/apache-maven-3.6.3:/usr/local/maven \
    # 将仓库存放目录映射到docker中
  -v /var/maven-repository:/var/maven-repository \
  
  jenkinsci/blueocean 




启动之后有一个问题就是一直进不支，还一直重启
	Please wait while Jenkins is getting ready to work ... 
		Your browser will rel

解决方法：
	进入到jekins 的工作目录		或者在映射的主机目录(/var/jenkins-data)下面 
		docker exec -it jenkins-suyh bash
		cd /var/jenkins_home
	打开文件: "hudson.model.UpdateCenter.xml"
		修改url 为: https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json （清华大学的镜像地址）
				或者：http://updates.jenkins.io/update-center.json
		如下：
			<sites>
			  <site>
				<id>default</id>
				<url>https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json</url>
			  </site>
			</sites>

插件下载安装失败
	1、修改 jenkins 数据目录(/var/jenkins_home 映射目录：/var/jenkins_data)中的hudson.model.UpdateCenter.xml值为：
		https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json
		最好还是先重启一下，先进入到jenkins WEB 界面，安装默认插件之后，可能会有一些失败，然后再进行下一步。
	2、修改updates文件夹中的 default.json文件
		cd /var/jenkins-data/updates
		替换文件中所有 http://updates.jenkins-ci.org/download(或者 https://updates.jenkins.io/download) 为 https://mirrors.tuna.tsinghua.edu.cn/jenkins
		替换 http://www.google.com 修改为 http://www.baidu.com
	3、重启
		在浏览器中，http:localhost:8080/reload，这样可以重新载入配置。
		或者使用http:localhost:8080/restart，重启一下Jenkins ，选择安装推荐插件， 秒速安装成功，简直超速！！

日志查看
	# docker logs <docker-container-name>
	docker logs jenkins-suyh
查看主目录
	docker exec -it jenkins-suyh bash

密码以下文件中可以找到：
	vim /var/jenkins_home/secrets/initialAdminPassword
	vim /var/jenkins-data/secrets/initialAdminPassword

创建一个管理员帐户
	用户名： admin 
	密码： admin
	全名： suyunhong
	邮箱： su_787910081@sina.com

	
你需要安装Maven项目插件：Maven Integration plugin 。
所需要的插件：
	1. 中文插件：Localization: Chinese (Simplified)  
		搜索：Localization
	2. Maven 插件 Maven Integration
		搜索：Maven Integration
	3. Maven 插件 Publish Over SSH
		搜索：SSH






